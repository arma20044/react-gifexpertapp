{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAmB7C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKd,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCXlBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAWH,GAFxF,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1CN,QAAQC,IAAIW,GAdO,kBAiBZA,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAKlC,OACI,sBAAKc,UAAU,0CAAf,UACK,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHAO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECJd,SAAEA,GAAgB,IAAD,EAEfhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAyBzC,OAlBJC,qBAAU,WAENxB,EAASC,GAAWwB,MAChB,SAAAC,GAEIC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAMZ,CAACpB,IAEOqB,EDhByBM,CAAc3B,GAAlCa,EAL0B,EAK/BN,KAAca,EALiB,EAKjBA,QAOrB,OANAxB,QAAQC,IAAIuB,GAOR,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAIWH,EAAOJ,KAAK,SAAEC,GAAF,OAER,cAAC,EAAD,eAEQA,GADEA,EAAIC,aE5B7BiB,EAAe,WAAM,MAIK5C,mBAAS,CAAC,cAJf,mBAIxB6C,EAJwB,KAIZ9C,EAJY,KAQ9B,OACI,qCACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,0BAGJ,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MChB/B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1215ba98.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n        //console.log('Submit hecho');\r\n        setCategories( cats => [ inputValue, ...cats ]);\r\n        setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            \r\n            <input\r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=fa0yLZ2QaeRqkktX2wPkKqYKvE6OYeyk&q=${ encodeURI( category) }&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log(gifs);\r\n    \r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n     \r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__flipInY'>\r\n             <img src={ url } alt={ title }></img>\r\n             <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { useState, useEffect } from 'react/cjs/react.development';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    \r\n \r\n\r\n    const {data:images,  loading} = useFetchGifs( category );\r\n    console.log(loading);\r\n\r\n \r\n    \r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n            \r\n            { loading && <p>Loading...</p> }\r\n\r\n             <div className=\"card-grid\">\r\n            \r\n                \r\n                    {\r\n                        images.map( ( img ) => (\r\n\r\n                            <GifGridItem \r\n                                key= {img.id}\r\n                                {...img}\r\n                                />\r\n                        ) )    \r\n                    }\r\n                \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>  {\r\n     \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\nuseEffect(() => {\r\n\r\n    getGifs( category ).then( \r\n        imgs => {\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 3000);\r\n       \r\n        }\r\n    );\r\n   \r\n    \r\n}, [category]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   // const categories = ['One Punch' , 'Samurai X' , 'Dragon Ball']\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n   // , 'Samurai X' , 'Dragon Ball'])\r\n\r\n \r\n    return (\r\n        <>\r\n            <div>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={ setCategories }/>\r\n                <hr/>\r\n            </div>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key= { category }\r\n                        category= { category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n \n\nReactDOM.render(\n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n \n"],"sourceRoot":""}